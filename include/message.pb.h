/* Automatically generated nanopb header */
/* Generated by nanopb-1.0.0-dev */

#ifndef PB_MESSAGE_PB_H_INCLUDED
#define PB_MESSAGE_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef PB_BYTES_ARRAY_T(64) ClientMessage_payload_t;
typedef struct _ClientMessage {
    char command[64];
    ClientMessage_payload_t payload;
} ClientMessage;

typedef PB_BYTES_ARRAY_T(64) ServerResponse_payload_t;
typedef struct _ServerResponse {
    char status[64];
    ServerResponse_payload_t payload;
} ServerResponse;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define ClientMessage_init_default               {"", {0, {0}}}
#define ServerResponse_init_default              {"", {0, {0}}}
#define ClientMessage_init_zero                  {"", {0, {0}}}
#define ServerResponse_init_zero                 {"", {0, {0}}}

/* Field tags (for use in manual encoding/decoding) */
#define ClientMessage_command_tag                1
#define ClientMessage_payload_tag                2
#define ServerResponse_status_tag                1
#define ServerResponse_payload_tag               2

/* Struct field encoding specification for nanopb */
#define ClientMessage_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   command,           1) \
X(a, STATIC,   SINGULAR, BYTES,    payload,           2)
#define ClientMessage_CALLBACK NULL
#define ClientMessage_DEFAULT NULL

#define ServerResponse_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   status,            1) \
X(a, STATIC,   SINGULAR, BYTES,    payload,           2)
#define ServerResponse_CALLBACK NULL
#define ServerResponse_DEFAULT NULL

extern const pb_msgdesc_t ClientMessage_msg;
extern const pb_msgdesc_t ServerResponse_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define ClientMessage_fields &ClientMessage_msg
#define ServerResponse_fields &ServerResponse_msg

/* Maximum encoded size of messages (where known) */
#define ClientMessage_size                       131
#define MESSAGE_PB_H_MAX_SIZE                    ClientMessage_size
#define ServerResponse_size                      131

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
